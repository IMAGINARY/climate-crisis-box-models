{"version":3,"file":"box-model.modern.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["export type IVPIntegrator = (\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) => number[];\n\nexport function euler(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) {\n  const dydx = derivatives(y, x);\n  return y.map((_, i) => y[i] + h * dydx[i]);\n}\n\nexport function rk4(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yt: number[] = Array(n);\n\n  const hh = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + hh;\n\n  for (let i: number = 0; i < n; i += 1) yt[i] = y[i] + hh * dydx[i];\n  let dyt = derivatives(yt, xhh);\n\n  for (let i: number = 0; i < n; i += 1) yt[i] = y[i] + hh * dyt[i];\n  const dym = derivatives(yt, xhh);\n\n  for (let i: number = 0; i < n; i += 1) {\n    yt[i] = y[i] + h * dym[i];\n    dym[i] += dyt[i];\n  }\n  dyt = derivatives(yt, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dyt[i] + 2.0 * dym[i]));\n}\n","import { IVPIntegrator, euler, rk4 } from './ode';\n\nexport { IVPIntegrator, euler, rk4 };\n\ntype LookupFunction = (id: string) => number;\n\nexport type Equation = (\n  s: LookupFunction,\n  f: LookupFunction,\n  v: LookupFunction,\n  c: LookupFunction,\n  t: number\n) => number;\n\nexport interface Stock {\n  readonly id: string;\n  readonly in: ReadonlyArray<string>;\n  readonly out: ReadonlyArray<string>;\n}\n\nexport interface Flow {\n  readonly id: string;\n  readonly equation: Equation;\n}\n\nexport interface Variable {\n  readonly id: string;\n  readonly equation: Equation;\n}\n\nexport interface Constant {\n  readonly id: string;\n  value: number;\n}\n\nexport interface Record {\n  stocks: number[];\n  flows: number[];\n  variables: number[];\n  constants: number[];\n}\n\nfunction duplicates(arr: any[]) {\n  return arr.reduce((acc, cur, curIdx, arr) => {\n    if (arr.lastIndexOf(cur) !== curIdx) {\n      arr.push(cur);\n    }\n    return acc;\n  }, []);\n}\n\nfunction sum(a: Array<number>) {\n  return a.reduce((a, c) => a + c, 0);\n}\n\nexport default class BoxModel {\n  public readonly stocks: ReadonlyArray<Stock>;\n  public readonly flows: ReadonlyArray<Flow>;\n  public readonly variables: ReadonlyArray<Variable>;\n  public readonly constants: ReadonlyArray<Constant>;\n  public integrator: IVPIntegrator;\n\n  protected idToIdx: { [key: string]: number };\n\n  constructor(\n    {\n      stocks,\n      flows,\n      variables,\n      constants,\n    }: {\n      stocks: Stock[];\n      flows: Flow[];\n      variables: Variable[];\n      constants: Constant[];\n    },\n    integrator: IVPIntegrator = rk4\n  ) {\n    this.stocks = stocks;\n    this.flows = flows;\n    this.variables = variables;\n    this.constants = constants;\n    this.integrator = integrator;\n\n    this.ensureUniqueIds();\n\n    this.idToIdx = {\n      ...BoxModel.createIdToIdxMap(stocks),\n      ...BoxModel.createIdToIdxMap(variables),\n      ...BoxModel.createIdToIdxMap(constants),\n      ...BoxModel.createIdToIdxMap(flows),\n    };\n  }\n\n  protected ensureUniqueIds() {\n    const ids = []\n      .concat(this.stocks, this.variables, this.constants, this.flows)\n      .map((item) => item.id);\n    const duplicateIds = duplicates(ids);\n    if (duplicateIds.length > 0) {\n      throw new Error(`Duplicate ids found: ${duplicateIds}`);\n    }\n  }\n\n  static createIdToIdxMap(arr: Array<{ id: string }>) {\n    const map = {};\n    arr.forEach(({ id }, i) => (map[id] = i));\n    return map;\n  }\n\n  public evaluateGraph(stocks: number[], t: number): Record {\n    const s = (id) => stocks[this.idToIdx[id]];\n\n    const constants = this.constants.map(({ value }) => value);\n    const c = (id) => constants[this.idToIdx[id]];\n\n    const buildEvaluator = (items) => {\n      const data = new Array(items.length);\n      return {\n        evaluator: (id) => {\n          const idx = this.idToIdx[id];\n          if (data[idx] === null) {\n            throw new Error('Evaluation cycle detected starting at: ${id}');\n          }\n\n          if (typeof data[idx] === 'undefined') {\n            data[idx] = null; // guard the element for cycle detection\n            data[idx] = items[idx].equation(s, f, v, c, t);\n          }\n          return data[idx];\n        },\n        data,\n      };\n    };\n\n    const { evaluator: v, data: variables } = buildEvaluator(this.variables);\n    const { evaluator: f, data: flows } = buildEvaluator(this.flows);\n\n    this.variables.forEach(({ id }) => v(id));\n    this.flows.forEach(({ id }) => f(id));\n\n    return { stocks, flows, variables, constants };\n  }\n\n  public step(initialStockValues: number[], t: number, h: number): number[] {\n    return this.stepExt(initialStockValues, t, h).stocks;\n  }\n\n  public stepExt(initialStockValues: number[], t: number, h: number): Record {\n    const derivs = (y: number[], x: number): number[] => {\n      const { flows } = this.evaluateGraph(y, x);\n\n      const f = (id): number => flows[this.idToIdx[id]];\n      const addFlows = (flows) => sum(flows.map((id) => f(id)));\n\n      return y.map((_, i) => {\n        const inFlow = addFlows(this.stocks[i].in);\n        const outFlow = addFlows(this.stocks[i].out);\n        return inFlow - outFlow;\n      });\n    };\n\n    const stocks = this.integrator(initialStockValues, t, h, derivs);\n    const { flows, variables, constants } = this.evaluateGraph(stocks, t + h);\n\n    return { stocks, variables, constants, flows };\n  }\n}\n\nexport { BoxModel };\n"],"names":["euler","y","x","h","derivatives","dydx","map","_","i","rk4","n","length","yt","Array","hh","h6","xhh","dyt","dym","BoxModel","constructor","stocks","flows","variables","constants","integrator","this","ensureUniqueIds","idToIdx","createIdToIdxMap","duplicateIds","concat","item","id","reduce","acc","cur","curIdx","arr","lastIndexOf","push","Error","[object Object]","forEach","evaluateGraph","t","s","value","c","buildEvaluator","items","data","evaluator","idx","equation","f","v","step","initialStockValues","stepExt","addFlows","a","in","out"],"mappings":"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"}