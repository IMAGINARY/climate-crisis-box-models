@use '~@fontsource/roboto-condensed/scss/mixins' as RobotoCondensed;

@import '~/node_modules/reseter.css/css/reseter.css';

@include RobotoCondensed.fontFace(
  $fontName: 'RobotoCondensed-Regular',
  $weight: 400,
  $display: fallback,
  $fontDir: '~/node_modules/@fontsource/roboto-condensed/files'
);

@include RobotoCondensed.fontFace(
  $fontName: 'RobotoCondensed-Bold',
  $weight: 700,
  $display: fallback,
  $fontDir: '~/node_modules/@fontsource/roboto-condensed/files'
);

body {
  font-family: RobotoCondensed-Regular, monospace;
  overscroll-behavior: none;
  overflow: scroll;
  width: 1024px;
  height: 600px;
}

.scene .graph {
  position: absolute;
  right: -5px;
}

.scene {
  .graph:nth-of-type(1) {
    top: -10px;
  }

  .graph:nth-of-type(2) {
    top: 170px;
  }
}

#aspect-ratio-box {
  height: 0;
  overflow: hidden;
  padding-top: calc(600 / 1024 * 100%);
  position: relative;
}

@mixin fill-box {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  overflow: hidden;
}

.scenario-container {
  @include fill-box;

  > .scenario {
    @include fill-box;

    .fade-in {
      transition: opacity 0.5s;
      opacity: 1;
    }

    .fade-out {
      transition: opacity 0.5s;
      opacity: 0;
    }

    .scene,
    .overlay,
    .label {
      @include fill-box;
    }

    .label {
      margin: 5px;
    }
  }
}

#osc {
  @include fill-box;

  /**
   * Pass through all events to the elements behind ...
   */
  pointer-events: none;

  /**
   * ... except for events going to the on-screen controls themselves.
   */
  * {
    pointer-events: all;
  }

  #slider-container {
    display: none;
  }

  > #scenario-selector-container {
    $width: 53px;
    $height: 53px;

    > * {
      position: absolute;
      top: calc(34.859375px - #{$height} / 2);
      height: $height;
      width: $width;
      background: transparent;
      border: none;
      cursor: pointer;
      border-radius: 50%;
    }

    > #scenario-1-button {
      left: calc(868.609375px - #{$width} / 2);
    }

    > #scenario-2-button {
      left: calc(915.48px - #{$width} / 2);
    }

    > #scenario-3-button {
      left: calc(967.26px - #{$width} / 2);
    }
  }
}

.invisible {
  visibility: hidden;
}

.display-none {
  display: none;
}

#sunrays-in {
  stroke-linecap: round;
  stroke-dasharray: 10;
  animation: sunrays 500ms infinite;
  animation-timing-function: linear;
}

@keyframes sunrays {
  from {
    stroke-dashoffset: 20;
  }
  to {
    stroke-dashoffset: 0;
  }
}

#sun-in-between > * {
  animation: rotate 20000ms infinite;
  animation-timing-function: linear;
}

#sun-in-between > *:nth-child(odd) {
  animation-direction: reverse;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

svg text {
  white-space: pre;
}

.animation-paused * {
  animation-play-state: paused !important;
}
